cnames <- strsplit(cnames, sep = "|", fixed = TRUE)
cnames <- strsplit(cnames, "|", fixed = TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0x,1)
boxplot(x0,x1)
boxplot(x0,x1)
install.packages("swirl")
library(swirl)
swirl()
swirl()
install.packages("kernlab")
library(kernlab)
data(spam)
set.seed(3435)
trainIndicator = rbinom(4601, size = 1, prob = 0.5)
head(trainIndicator)
table(trainIndicator)
trainspam = spam[trainIndicator == 1, ]
testspam = spam[trainIndicator == 0, ]
summary(trainspam)
names(trainspam)
table(trainspam$type)
plot(trainspam$capitalAve ~ trainspam$type)
plot((log10(trainspam$capitalAve) + 1) ~ trainspam$type)
hCluster = hclust(dist(t(trainspam[, 1:57])))
plot(hCluster)
getwd()
setwd("Dropbox/postdoc/courses/coursera")
setwd("reproducable_research")
list.files()
setwd("reproducable_research")
list.files()
setwd("reproducable_reserach")
ls
list.files()
?read.cdv
?read.csv
ipps_data <- read.csv("_e143dff6e844c7af8da2a4e71d7c054d_payments.csv", sep = ",")
head(ipps_data)
plot(ipps_data$Average.Covered.Charges ~ ipps_data$Average.Total.Payments)
plot(ipps_data$Average.Total.Payments ~ ipps_data$Average.Covered.Charges)
class(ipps_data$Provider.City)
class(ipps_data$Provider.State)
IPPS_NY <- subset(ipps_data, ipps_data$Provider.City = NY)
IPPS_NY <- subset(ipps_data, ipps_data$Provider.City == NY)
IPPS_NY <- subset(ipps_data, ipps_data$Provider.State == NY)
IPPS_NY <- subset(ipps_data, Provider.State = NY)
head(IPPS_NY$Provider.State)
IPPS_NY <- subset(ipps_data, Provider.State == NY)
IPPS_NY <- subset(ipps_data, as.character(Provider.State) == "NY")
head(IPPS_NY$Provider.State)
View(IPPS_NY)
plot(IPPS_NY$Average.Total.Payments ~ IPPS_NY$Average.Covered.Charges)
remove(list = ls)
remove(list = ls())
IPPS_data <- read.csv("_e143dff6e844c7af8da2a4e71d7c054d_payments.csv", sep = ",")
IPPS_NY <- subset(IPPS_data, as.character(Provider.State) == "NY")
IPPS_NY$Provider.State
library(ggplot2)
g <- ggplot(data = IPPS_NY, aes(x = IPPS_NY$Average.Total.Payments, y = IPPS_NY$Average.Total.Payments))
+ geom_point()
g <- ggplot(data = IPPS_NY, aes(x = IPPS_NY$Average.Total.Payments, y = IPPS_NY$Average.Total.Payments))
g + geom_point()
g <- ggplot(data = IPPS_NY, aes(x = IPPS_NY$Average.Total.Payments, y = IPPS_NY$Average.Total.Payments))
g + geom_point()
g + geom_line()
g <- ggplot(data = IPPS_NY, aes(x = log10(IPPS_NY$Average.Total.Payments)+1, y = log10(IPPS_NY$Average.Total.Payments) + 1))
g + geom_line()
g + geom_point()
sum(is.na(IPPS_NY$Average.Covered.Charges))
sum(is.na(IPPS_NY$Average.Total.Payments))
source("myplots.R")
myplots()
myplots()
myplots()
source("myplots.R")
myplots()
myplots()
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
graphics.off()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
View(IPPS_data)
IPPS_data$DRG.Definition
names(IPPS_data)
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
source("myplots.R")
myplots()
library(datasets)
data("mtcars")
data(mtcars)
library(datasets)
class(mtcars$cyl)
class(IPPS_data$Provider.State)
source("myplots.R")
myplots()
clas(IPPS_data$DRG.Definition)
class(IPPS_data$DRG.Definition)
g2 <- ggplot(data = IPPS_data, aes(log10(Average.Covered.Charges), log10(Average.Total.Payments), colour = DRG.Definition)) +
geom_point()
g2
g2 <- ggplot(data = IPPS_data, aes(log10(Average.Covered.Charges), log10(Average.Total.Payments), colour = Provider.State)) +
geom_point()
g2
source("myplots")
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
head(IPPS_data$DRG.Definition)
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
head(IPPS_data$DRG.Definition)
head(levels(IPPS_data$DRG.Definition)
)
levels(IPPS_data$DRG.Definition)
levels(IPPS_data$Provider.State)
levels(IPPS_data$DRG.Definition) <- c("194","292","392","641","690","871")
levels(IPPS_data$DRG.Definition)
g2 <- ggplot(data = IPPS_data, aes(log10(Average.Covered.Charges), log10(Average.Total.Payments))) +
geom_point(shape = 21, size = 2, colour = "blue") +
geom_smooth(method = "lm", se = TRUE, colour = "black") +
facet_grid(DRG.Definition ~ Provider.State)
g2
g2 <- ggplot(data = IPPS_data, aes(log10(Average.Covered.Charges), log10(Average.Total.Payments))) +
geom_point(shape = 21, size = 2, colour = "blue") +
geom_smooth(method = "lm", se = TRUE, colour = "black") +
facet_grid(Provider.State ~ DRG.Definition)
g2
g2 <- ggplot(data = IPPS_data, aes(log10(Average.Covered.Charges), log10(Average.Total.Payments))) +
geom_point(shape = 21, size = 2, colour = "blue") +
geom_smooth(method = "lm", se = TRUE, colour = "black") +
facet_grid(Provider.State ~ DRG.Definition) +
labs(x = "Mean Covered Charges ($)", y = "Mean Total Payement ($)")
g2
g2 <- ggplot(data = IPPS_data, aes(log10(Average.Covered.Charges), log10(Average.Total.Payments))) +
geom_point(shape = 21, size = 2, colour = "blue") +
geom_smooth(method = "lm", se = TRUE, colour = "black") +
facet_grid(Provider.State ~ DRG.Definition) +
labs(x = "Mean Covered Charges ($)", y = "Mean Total Payement ($)", title = "Relationsship between mean covered charges and total payment in versus DRG in each state")
g2
log(5000)
log10(5000)
source("myplots()")
source("myplots.R")
myplots()
source("myplots.R")
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
levels(IPPS_data$DRG.Definition)
levels(IPPS_NY$DRG.Definition)
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
source("myplots.R")
myplots()
levels(IPPS_NY$DRG.Definition)
source("myplots.R")
myplots()
install.packages("xtable")
remove(list = ls())
getwd()
setwd("week2")
getwd()
setwd("project")
list.files()
list.files()
activity_data <- read.csv("activity.csv", sep = ",")
head(activity_data)
sum(is.na(activity_data$steps))
?rm.na
=read.csv()
?read.csv()
class(activity_data$steps)
class(activity_data$date)
class(activity_data$interval)
list.files()
setwd("RepData_PeerAssessment1")
list.files()
activity_data <- read.table("activity.zip", sep = ",")
head(activity_data)
activity_data <- read.table("activity.zip", header=T, sep = ",")
remove(list = ls())
getwd()
list.files()
activity <- read.csv("activity.csv", sep = ",")
head(activity)
activity <- activity[complete.cases(activity[ , 1]), ]
activity <- read.csv("activity.csv", sep = ",")
s <- sum(is.na(activity$steps))
s
nrow(activity) - s
nr <- nrow(activity) - s
activity <- activity[complete.cases(activity[ , 1]), ]
head(activity)
activity <- read.csv("activity.csv", sep = ",")
class(activity)
names(activity)
hist(activity)
hist(activity$steps)
class(activity$date)
?as.Date
date <- activity$date
class(date)
date <- as.Date(date, "%Y%m%d%")
head(date)
date <- activity$date
head(date)
View(activity)
date <- as.character(activity$date)
date <- as.Date(date, "%Y%m%d%")
date
date <- as.character(activity$date)
date
date <- as.Date(date, "%Y/%m/%d")
date
date <- as.character(activity$date)
head(date)
df <- data.frame(Date = c("10/9/2009 0:00:00", "10/15/2009 0:00:00"))
df
class(df$Date)
as.Date(df$Date, "%m/%d/%Y %H:%M:%S")
class(as.Date(df$Date, "%m/%d/%Y %H:%M:%S"))
class(activity$date)
date <- as.Date(activity$date, "%m/%d/%Y")
activity <- activity[complete.cases(activity[ , 1]), ]
date <- as.Date(activity$date, "%m/%d/%Y")
activity <- read.csv("activity.csv", sep = ",")
date <- as.character(activity$date)
sum(is.na(date))
head(date)
d1 <- c("2012-10-01", "2012-10-01", "2012-10-01", "2012-10-01")
as.Date(d1, "%Y/%m/%d")
as.Date(c("2012-10-01", "2012-10-01", "2012-10-01", "2012-10-01"))
as.date(d1)
as.Date(d1)
dd1 <- as.Date(date)
hist(activity$steps)
View(activity)
head(activity$interval)
View(activity)
24*60
1440/5
?hist
levels(activity$steps)
?rm
min <- activity$interval %% 100
head(min)
min
hour <- activity$interval %/% 100
hour
0/100
55/100
55%/%100
dataset$elapsed <- dataset$hour * 60 + dataset$minute
activity$hour <- activity$interval %/% 100
activity$minute <- activity$interval %% 100
head(activity)
View(activity)
activity$elapsed <- activity$hour * 60 + activity$minute
View(activity)
class(activity$hour)
class(activity$minute)
24*60
2*24*60
sumperday <- aggregate(steps ~ date, data = activity, FUN = sum, na.exclude=T)
head(sumperday)
hist(sumperday)
hist(sumperday$steps)
hist(sumperday$steps, braeks = 10)
?hist
?tapply
ss <- with(activity, tapply(steps, date, sum))
head(ss)
ss <- with(activity[complete.cases(activity[, 1]), ], tapply(steps, date, sum))
head(ss)
activity_rmna <- complete.cases(activity[, 1], )
activity_rmna <- activity[complete.cases(activity[, 1], ), ]
activity_rmna <- activity[complete.cases(activity[, 1]), ]
ss <- with(activity_rmna, tapply(steps, date, sum))
ss
hist(ss)
sumDay <- aggregate(steps, date, data = activity_data, na.exclue = T)
hist(sumDay$steps, col = "blue",
xlab = "Number of steps", ylab = "Frequency",
main = "Total number of steps")
hist(ss)
sumDay <- aggregate(steps, date, data = activity, na.exclue = T)
View(activity)
getwd()
hist(sumDay$steps, col = "blue",
xlab = "Number of steps", ylab = "Frequency",
main = "Total number of steps")
sumDay <- aggregate(steps ~ date, data = activity_data, FUN = sum, na.exclue = T)
hist(sumDay$steps, col = "blue",
xlab = "Number of steps", ylab = "Frequency",
main = "Total number of steps")
sumDay <- aggregate(steps ~ date, data = activity, FUN = sum, na.exclue = T)
hist(sumDay$steps, col = "blue",
xlab = "Number of steps", ylab = "Frequency",
main = "Total number of steps")
g1 <- ggplot(data = sumDay, aes(sumDay$steps)) +
geom_histogram() +
labs(x = "number of steps", y = "frequency",
title = "total number of steps per day")
print(g1)
View(sumDay)
remove(list = ls())
list.files()
activity <- unzip("activity.zip")
activity_data <- read.csv("activity.csv", sep = ",")
activity_data$date <- as.Date(activity_data$date)
sumDay <- aggregate(steps ~ date, data = activity_data,
FUN = sum, na.exclue = T)
sumDay <- aggregate(steps ~ date, data = activity_data,
FUN = sum, na.exclude = T)
head(sumDay)
hist(sumDay$steps)
g1 <- ggplot(data = sumDay, aes(sumDay$steps)) +
geom_histogram() +
labs(x = "number of steps", y = "frequency",
title = "total number of steps per day")
print(g1)
hist(sumDay$steps)
hist(sumDay$steps, breaks = 10)
hist(sumDay$steps, breaks = 10, col = "blue"
main = "Total number of steps per day",
xlab = "steps per day")
hist(sumDay$steps, breaks = 10, col = "blue",
main = "Total number of steps per day",
xlab = "steps per day")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
mean <- mean(sumDay$steps, na.rm = TRUE)
mean
round(mean)
activity_data$minutes <- activity_data$interval %/% 100
minute <- activity_data$interval %/% 100
hour <- activity_data$interval %% 100
activity_data$newInt <- hour * 60 + minutes
minute <- activity_data$interval %/% 100
hour <- activity_data$interval %% 100
activity_data$newInt <- hour * 60 + minute
View(activity_data)
5 %7% 100
5 %/% 100
10 %/% 100
10 %% 100
minute <- activity_data$interval %% 100
hour <- activity_data$interval %/% 100
activity_data$newInt <- hour * 60 + minutes
minute <- activity_data$interval %% 100
hour <- activity_data$interval %/% 100
activity_data$newInt <- hour * 60 + minute
meanInt <- aggregate(steps ~ activity_data$newInt, data = activity_data, FUN = "mean", na.exclude = T)
View(meanInt)
View(meanInt)
meanInt$
meanInt <- aggregate(steps ~ newInt, data = activity_data, FUN = "mean", na.exclude = T)
meanInt$
meanInt$
)
plot(meanInt$newInt, steps, type = "l", col = "blue")
View(activity_data)
meanInt <- aggregate(steps ~ newInt, data = activity_data, FUN = "mean", na.exclude = T)
head(menInt)
head(meanInt)
plot(newInt, steps)
plot(meanInt$newInt, meanInt$steps)
plot(meanInt$newInt, meanInt$steps, type = "l")
View(meanInt)
View(meanInt)
View(sumDay)
60*24*60
60*24*60/5
View(activity_data)
max(activity_data$newInt)
View(meanInt)
head(sumDay)
?aggregate
View(meanInt)
remove(list = ls())
R.Version()
