boxplot(pm25~region)
boxplot(pollution$pm25~pollution$region)
boxplot(pm25 ~ region, data = pollution, col = "red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east <- subset(pollution, "east")
info()
nxt()
east <- subset(pollution, "east")
nxt()
bye()
swirl()
x = seq(-2,2,by=0.1)
Y = 2 + 3*x
plot(x,Y)
?plot
alligator = data.frame(
lnLength = c(3.87, 3.61, 4.33, 3.43, 3.81, 3.83, 3.46, 3.76,
3.50, 3.58, 4.19, 3.78, 3.71, 3.73, 3.78),
lnWeight = c(4.87, 3.93, 6.46, 3.33, 4.38, 4.70, 3.50, 4.50,
3.58, 3.64, 5.90, 4.43, 4.38, 4.42, 4.25)
)
xyplot(lnWeight ~ lnLength, data = alligator, xlab="Snout vent length (inches)",ylab="Weight (pounds)",main = "Alligators in Central Florida")
plot(lnWeight ~ lnLength, data = alligator, xlab="Snout vent length (inches)",ylab="Weight (pounds)",main = "Alligators in Central Florida")
?lm()
alli.modl = lm(lnWeight ~ lnLength, data = alligator)
summary(alli.modl)
qqmath(~ resid(alli.modl),xlab= "Theoretical",ylab="Resid")
library(datasets)
data(cars)
with(cars,plot(speed,dist))
head(cars)
library(lattice)
state <- data.frame(state.x77, region = state.region)
xyplot(Life.Exp ~ Income | region, data = stae, layout = c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4,1))
library(ggplot2)
data(mpg)
qplot(displ,hwy,data=mpg)
?qplot
library(datasets)
hist(airquality$Ozone)
?transform
airquality <- transform(airquality, month = factor(month.abb))
airquality <- transform(airquality, month = factor(month))
airquality <- transform(airquality, month = factor(Month))
?boxplot
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone ()ppb")
par("lty")
par("col")
par("lwd")
par("pc")
par("pch")
par("bg")
par("mar")
par("mfrow")
plot(Wind, Month)
plot(Wind, Month, data = airquality)
plot(airquality$Month, airquality$Wind)
plot(airquality$Wind, airquality$Ozone)
with(airquality, plot(Wind, Ozone))
with(airquality, plot(Wind, Ozone, main = "Ozone and Wind in New York City"))
with(subset(airquality, Month == 5), points(Wind, Ozone, col = "blue"))
with(airquality, plot(Wind, Ozone, main = "Ozone and Wind In New York City"))
with(subset(airquality, Month == 5), points(Wind, Ozone, col = "blue"))
with(subset(airquality))
with(subset(airquality, Month != 5), points(Wind, Ozone, col = "red"))
legend("topright", pch = 1, col = c("blue", "red"), legend = c("May", "Not May"))
?pch
with(airquality, plot(Wind, Ozone, main = "Wind and Ozone in New York City", pch = 20))
model <- lm(Ozone ~ Wind, airquality)
abline
abline(model , lwd = 2)
head(model)
par(mfrow = c(1,2))
with(airquality, {})
with(airquality, {plot(Wind, Ozone, main = "Wind and Ozone in New York City"), })
with(airquality, {plot(Wind, Ozone, main = "Wind and Ozone in New York City"), plot(Solar. R, Ozone, main = "Ozone and Solar Radiation")})
with(airquality, {plot(Wind, Ozone, main = "Wind and Ozone"), plot(Solar. R, Ozone, main = "Ozone and Solar Radiation")})
with(airquality, {plot(Wind, Ozone, main = "Wind and Ozone") plot(Solar. R, Ozone, main = "Ozone and Solar Radiation")})
with(airquality, {plot(Wind, Ozone, main = "Wind and Ozone") plot(Solar.R, Ozone, main = "Ozone and Solar Radiation")})
with(airquality, {plot(Wind, Ozone, main = "Wind and Ozone") plot(Solar.R, Ozone, main = "Ozone and Solar Radiation")})
par(mfrow = c(1,2))
with(airquality, {plot(Wind, Ozone) plot(Solar.R, Ozone)})
with(airquality, plot{
with(airquality, {
plot(Wind, Ozone)
plot(Solar.R, Ozone)
})
x <- rnorm(100)
hist(x)
y <- rnorm(100)
plot(x, y)
par(mar = c(2,2,2,2))
plot(x,y)
par(mar = c(4,4,2,2))
plot(x,)
plot(x,y)
plot(x,y, pch = 3)
plot(x,y, pch = 5)
pchShow()
example("points")
plot(x,y,pch = 20)
x <- rnorm(100)
y <- rnorm(100)
plot(x,y,pch = 20)
title("scatter plot")
text(-2, -2 , "text")
text(2, 1 , "text")
legend("topleft", pch = 20, legend = "data")
?legend
lm(y ~ x)
model <- lm(y ~ x)
abline
abline(model)
abline(model, lwd = 2)
abline(model, lwd = 2, col = "blue")
x <- rnorm(100)
y <- rnorm(100)
z <- rpois(100)
z <- rpois(100,2)
par(mfrrow = c(2,1))
par(mfrow = c(2,1))
plor(x,y, pch = 020)
plot(x,y, pch = 20)
plot(x,y, pch = 20)
par(mar = c(4,4,2,2))
par(mfrow = c(2,1))
plot(x,y, pch = 20)
par(mfrow = c(2,2))
plot(x,y)
plot(x,z)
plot(z,x)
plot(y,x)
x <- rnorm(100)
y <- x + rnorm(100)
g <- gl(2,50)
?gl
g <- gl(2, 50, labels = c("male", "female"))
plot(x,y)
par(mfrow = c(1,1))
plot(x,y)
plot(x,y, type = "n")
points(x[g == "male"], y[g == "male"], pch = 19, col = "green")
points(x[g == "female"],y[g == "female"], pch = 20, col = "red")
legend("topleft", pch = 3, col = c("green", "red"), legend = c("male", "felame"))
legend("topleft", pch = 3, col = c("green", "red"), cex = 0.75, legend = c("male", "felame"))
plot(x,y,type = "n")
par(mfrow = c(1,1))
plot(x,y,type = "n")
points(x[g == "male"],y[g == "male"], col = "green")
points(x[g == "female"],y[g == "female"], col = "red")
legend("topleft",col = c("green","red"),pch = 3, cex = 0.3, legend = c("male","female"))
library(datasets)
with(faithful, plot(eruptions, waiting))
title(main = "Old faithful geyser data")
?lm
model <- lm(waiting, eruptions, data = faithful)
model <- lm(waiting ~ eruptions, data = faithful)
abline(model, col = "blue", lwd = 2)
pdf(file = "myplot.pdf")
pwd
getwd
getwd()
with(faithful, plot(eruptions, waiting))
title(main = "Old faithful geyser data")
dev.off()
dev.copy(png, file = "myplot1.png")
R.version.string
install.packages(swirl)
install.packages("swirl")
library(swirl)
ls()
rm(list = ls())
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
head(pollution)
dim(pollution)
summary(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm)
boxplot(ppm, col = "blue")
abline(h = 12)
hist(ppm, col = "green")
rug(ppm)
low(ppm)
low
high
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col = "green")
abline(v = 12, lwd = 2)
abline(v = median(ppm), col = "magenta", lwd = 4)
names(pollution)
reg <- table(pollution$region)
reg
barplot(reg, col = "wheat", main = "Number of counties in each region")
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(pm25~region, data = pollution)
boxplot(pm25~region, data = pollution, col = "red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east <- subset(pollution, region == 2east)
east <- subset(pollution, region == "east")
east
head(east)
hist(east$pm25, col = "green")
hist(pm25, col = "green")
with (east, hist(pm25, col = "green"))
skip()
swirl()
swirl()
swirl()
install.packages("swirl")
library(swirl)
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
summary(ppm)
quantile(ppm)
boxplot(ppm,col = "blue")
abline(h=12)
hist(ppm,col = "green")
rug(ppm)
low
high
hist(ppm,col = "green",breaks = 100)
rug(ppm)
hist(ppm,col = "green")
abline(v=12)
abline(v=12,lwd=2)
abline(v=median(ppm),col=magenta,lwd=4)
abline(v=median(ppm),col="magenta",lwd=4)
names(pollution)
reg = table(pollution$region)
reg <- table(pollution$region)
reg
barplot(reg,col = "wheat",main = "Number of Counties in Each Region")
boxplot(pm25~region,col = "red")
boxplot(pm25~region,data=pollution,col = "red")
par(mfrow = c(1,2),mar=c(4,4,2,1))
par(mfrow = c(1,2), mar = c(4,4,2,1))
par(mfrow = c(2, 1), mar = c(4, 4, 2, 1))
subset(pollution, region = "east")
east <- subset(pollution,region="east")
east <- subset(pollution,region=="east")
head(east)
hist(east$pm25,col = "green")
hist((subset(pollution,region = "west"))$pm25,col = "green")
hist(subset(pollution,region = "west")$pm25, col = "green")
hist(subset(pollution,region=="west")$pm25, col = "green")
plot(pollution,)
with(pollution, plot(latitude, pm25))
abline(h=12,lwd = 2,lty = 2)
plot(pollution$latitude,ppm,col = pollution$region)
abline(h=12,lwd = 2,lty = 2)
par(mfrow = c(1,2), mar = c(4,4,2,1))
par(mfrow = c(1,2), mar = c(5,4,2,1))
west <- subset(pollution, region == "west")
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "East")
?Devices
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
pdf(file = "myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png,"geyserplot.png")
dev.copy(png,file = "geyserplot.png")
dev.off()
head(cars)
with(cars, plot(speed, dist))
text(mean(cars$speed), max(cars$dist, "SWIRL rules!"))
text(mean(cars$speed),max(cars$dist),"SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, data = state, layout=c(4,1))
xyplot(Life.exp ~ Income | region, data = state, layout = c(2,2))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, data = mpg)
head(airquality)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red")
title(main = "Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main = "Ozone and Wind in New York City")
length(par())
par()
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, set = "n")
plot(airquality$Wind, type="n",airquality$Ozone)
title(main = "Wind and Ozone in NYC")
may <- subset(airquality, Month == "May")
may <- subset(airquality, Month = 5)
may <- subset(airquality, Month == 5)
points(may$Wind, may$Ozone, pch = 5)
points(may$Wind, may$Ozone, col = "blue", pch = 17)
notmay <- subset(airquality, Month != 5)
plot(notmay$Wind, notmay$Ozone, col = "red", pch = 20)
plot(notmay$Wind, notmay$Ozone, col = "red", pch = 8)
points(notmay$Wind, notmay$Ozone, col = "red", pch = 8)
0
0
install.packages("swirl")
library(swirl)
swirl()
dim(ssd)
names(ssd)
names(ssd[562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject = 1)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub1[, 1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- dist(sub1[, 1:3])
hculstering <- hclust(mdist)
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[, 10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[ ,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(avd1$v[,2])
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[ ,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
sub1[maxCon]
names(sub1[maxCon])
kClust <- kmeans(sub1[,-c(562,563)])
kClust <- kmeans(sub1[,-c(562,563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[, -c(562,563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12],pch = 19, ylab = "Laying Cluster")
names(sub1[, 1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12],pch = 19, ylab = "Walkdown Cluster")
?sapply
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, sep = "|", fixed = TRUE)
cnames <- strsplit(cnames, "|", fixed = TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0x,1)
boxplot(x0,x1)
boxplot(x0,x1)
install.packages("swirl")
library(swirl)
swirl()
swirl()
R.Version()
R.version()
R.Version()
getwd()
setwd("Dropbox/postdoc/courses/coursera")
list.files()
setwd("reproducable_reserach")
list.files()
setwd("week2")
list.files()
setwd("project")
list.files()
setwd("RepData_PeerAssessment1")
list.files()
install.packages("ggplot2")
install.packages("dplyr")
activity_data <- read.csv("activity.csv", sep = ",")
activity_data$date <- as.Date(activity_data$date)
head(activity_data)
sumDay <- aggregate(steps ~ date, data = activity_data, FUN = sum, na.exclue = T)
head(sumDay)
sumDay <- aggregate(steps ~ date, data = activity_data, FUN = sum)
head(sumDay)
View(sumDay)
mean(sumDay$steps)
median(sumDay$steps)
head(activity_data)
24*60/5
View(activity_data)
minute <- activity_data$interval %% 100
hour <- activity_data$interval %/% 100
activity_data$newInt <- hour * 60 + minute
head(activity_data)
meanInt <- aggregate(steps ~ newInt, data = activity_data, FUN = "mean", na.exclude = T)
head(meanInt)
plot(meanInt$newInt, meanInt$steps, type = "l", col = "blue",
xlab = "5-min interval", ylab = "number of steps",
main = "Timeseries plot of mean number of steps per interval")
plot(meanInt$newInt, meanInt$steps, type = "l", col = "blue",
xlab = "5-min interval", ylab = "average number of steps",
main = "Timeseries plot of mean number of steps per interval")
sum(is.na(activity_data[ , 1]))
sum(is.na(activity_data$steps))
head(activity_data)
naval <- is.na(activity_data$steps)
head(naval)
View(sumDay)
View(meanInt)
minute(200)
minute(200)
minute[200]
ind <- with(activity_data, which(activity_data$steps) == "NA")
ind <- with(activity_data, which(is.na(activity_data$steps) == TRUE))
ind
minumte[9928]
minute[9928]
mInd <- minute[ind]
mInd
minut[9923]
minute[9923]
minute[9913]
minute[9914]
View(meanInt)
minute
mInd <- activity_data$newInt[ind]
mInd
ind[288]
ind[289]
ind[2304]
ind == 2304
ind
mInd
ind <- with(activity_data, which(is.na(activity_data$steps) == TRUE))
min_Ind <- activity_data$newInt[ind]
nn <- meanInt$steps[meanInt$newInt == min_Ind]
nn
nn <- meanInt$steps[meanInt$newInt == min_Ind]
is.na(activity_data$steps[1])
newdata <- activity_data
for (i in 1:nrow(newdata)){
if(is.na(newdata$steps[i])){
newdata$steps[i] <- meanInt$steps[meanInt$newInt == newdata$newInt[i]]
}
}
View(newdata)
View(newdata)
class(newdata$date)
newSumDay <- aggregate(newdata$steps ~ newdata$date, data = newdata, FUN = "sum")
View(newSumDay)
newSumDay <- aggregate(steps ~ date, data = newdata, FUN = "sum")
hist(newSumDay$steps, newSumDay$date, breaks = 10, col = "blue")
hist(newSumDay$steps, breaks = 10, col = "blue")
?mean
head(newdata)
?as.POSIXct
as.POSIXct(newdata$date)
dates <- as.POSIXct(newdata$date)
plot(date, newdata$steps)
plot(newdata$date, newdata$steps)
plot(newdata$date, newdata$steps, type = "l")
?weekdays
days <- weekdays(dates, abbreviate = TRUE)
?factor
days <- weekdays(dates, abbreviate = FALSE)
weekday <- c("Monday","Tuesday","Wednesday","Thursday","Friday")
newdata$weekdaya <- factor(weekdays(dates) %in% weekday, levels = c(FALSE, TRUE), labels = c("weekend","weekdays"))
View(newdata)
days
weekday <- c("Monday","Tuesday","Wednesday","Thursday","Friday")
newdata$weekdaya <- factor(weekdays(dates) %in% weekday, levels = c(FALSE, TRUE), labels = c("weekend","weekday"))
newdata$weekday <- factor(weekdays(dates) %in% weekday, levels = c(FALSE, TRUE), labels = c("weekend","weekday"))
meanWeekday <- aggregate(steps ~ weekday, data = newdata, FUN = "mean")
meanWeekday
g <- ggplot(data = newdata, aes(x = newInt, y = steps)) + stat_summary(fun = mean, geom = "line") + facet_grid(. ~ weekday)
library(ggplot2)
g <- ggplot(data = newdata, aes(x = newInt, y = steps)) + stat_summary(fun = mean, geom = "line") + facet_grid(. ~ weekday)
g
g <- ggplot(data = newdata, aes(x = newInt, y = steps)) + stat_summary(fun.y = mean, geom = "line") + facet_grid(. ~ weekday) + labs(x = "5 min interval", y = "average number of steps")
g
g <- ggplot(data = newdata, aes(x = newInt, y = steps)) +
stat_summary(fun.y = mean, geom = "line") +
facet_grid(. ~ weekday) + labs(x = "5 min interval", y = "average number of steps")
g
log(2000)
